% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vcovFPC.R
\name{vcovFPC}
\alias{vcovFPC}
\alias{vcovFPC.meMod}
\alias{vcovFPC.merMod}
\alias{vcovFPC.lme}
\title{\code{vcovFPC} Obtain finite-population-adjusted standard errors for
fixed effects estimates for a fitted multilevel model}
\usage{
vcovFPC(object, ...)

\method{vcovFPC}{merMod}(object, popsize2 = NULL, popsize1 = NULL,
  KR = FALSE)

\method{vcovFPC}{lme}(object, popsize2 = NULL, popsize1 = NULL,
  KR = FALSE)
}
\arguments{
\item{object}{an R object of class merMod as resulting from lmer() or
an object of class lme resulting from lme().}

\item{popsize2}{population size at Level-2; if NULL, an infinite Level-2
population is assumed.}

\item{popsize1}{population size at Level-1; if NULL, an infinite Level-1
population is assumed.}

\item{KR}{Whether Kenward-Roger approximation of standard errors should be used,
which is recommended for small number of clusters and average cluster size.
Default to FALSE. Not available for lme objects.}
}
\value{
The variance-covariance matrix of the fixed effect estimates, as
returned by vcov()
}
\description{
\code{vcovFPC} Obtain finite-population-adjusted standard errors for
fixed effects estimates for a fitted multilevel model
}
\examples{

library(nlme)
library(gamlss)
library(lme4)

# nlme Ovary data

mod.lme <- lme(follicles ~ Time, data = Ovary, random = ~ Time | Mare,
             method = 'ML')

mod.merMod <- lmer(follicles ~ Time + (Time | Mare), data = Ovary,
                REML = FALSE)

popsize2 <- seq(100,1000,by=100)

fpc.se.merMod <- fpc.se.lme <- list()
for(i in seq_along(popsize2))
{
  fpc.se.merMod[[i]] <- sqrt(diag(vcovFPC(mod.merMod, popsize2 = popsize2[i])))
  fpc.se.lme[[i]] <- sqrt(diag(vcovFPC(mod.lme, popsize2 = popsize2[[i]])))
}

all.equal(
do.call(rbind, fpc.se.merMod),
do.call(rbind, fpc.se.lme),
tolerance = 9e-06
)

\dontrun{

# use getLambdat to create Lambdat and show equivalence to lme4 (within rounding)
Lambdat <- getLambdat(mod.lme)
all.equal(Lambdat, getME(mod.merMod, "Lambdat"), tolerance = 9e-06)

# use getZt to create Zt and show equivalence to lme4
Zt <- getZt(mod.lme)
all.equal(unname(Zt), unname(getME(mod.merMod, "Zt")))

}

# nlme rat BodyWeight example

mod.lme <- lme(weight ~ Time, data = BodyWeight, random = ~ Time | Rat,
             method = 'ML')

mod.merMod <- lmer(weight ~ Time + (Time | Rat), data = BodyWeight,
                REML = FALSE)

fpc.se.merMod <- fpc.se.lme <- list()
for(i in seq_along(popsize2))
{
  fpc.se.merMod[[i]] <- sqrt(diag(vcovFPC(mod.merMod, popsize2 = popsize2[i])))
  fpc.se.lme[[i]] <- sqrt(diag(vcovFPC(mod.lme, popsize2 = popsize2[[i]])))
}

all.equal(
do.call(rbind, fpc.se.merMod),
do.call(rbind, fpc.se.lme),
tolerance = 9e-06
)

\dontrun{

# use getLambdat to create Lambdat and show equivalence to lme4 (within rounding)
Lambdat <- getLambdat(mod.lme)
all.equal(Lambdat, getME(mod.merMod, "Lambdat"), tolerance = 9e-06)

# use getZt to create Zt and show equivalence to lme4
Zt <- getZt(mod.lme)
all.equal(unname(Zt), unname(getME(mod.merMod, "Zt")))

}

\dontrun{

# some background tests

# random effects covariance matrices
getVarCov(mod.lme) # this is the same as VarCorr
VarCorr(mod.lme)

vcov(mod.merMod) # this is fixed effects, not the same matrix as VarCorr
VarCorr(mod.merMod)

# not implemented for gamlss

mod.gamlss <- gamlss(follicles ~ Time + re(random = ~ Time | Mare,
                method = 'ML'), sigma.fo = ~ 0,
                data = Ovary, )
mod.gamlss <- gamlss(weight ~ Time + re(random = ~ Time | Rat,
                method = 'ML'), sigma.fo = ~ 0,
                data = BodyWeight, )
}
}
\references{
https://psycnet.apa.org/doiLanding?doi=10.1037%2Fmet0000137
}
\author{
Mark H. C. Lai \email{mark.lai@uc.edu}, Oi-man Kwok, Yu-Yu Hsiao,
and Quina Cao. Updated by Stephen Tueller \email{Stueller@rti.org} for
compatibility with \code{nlme}
for inclusion in \code{\link{PersonAlytics}}.
}
